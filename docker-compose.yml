version: '2'
services:
  redis:
    image: "redis:alpine"

  metricstore:
    build:
      context: lib/metricstore
      args:
        - POSTGRES_PASSWORD=${DB_PASSWORD}
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_DB=${DB_NAME}
    env_file: .env
    image: sarjitsu:metricstore
    expose:
    - "${DB_PORT}"
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
    - "${METRICSTORE_PORT_MAPPING}:${DB_PORT}"
  # metricstore:
  #   image: postgres_ocp
  #   env_file: .env
  #   expose:
  #   - "${DB_PORT}"
  #   environment:
  #     - POSTGRESQL_PASSWORD=${DB_PASSWORD}
  #     - POSTGRESQL_USER=${DB_USER}
  #     - POSTGRESQL_DATABASE=${DB_NAME}
  #   ports:
  #   - "${METRICSTORE_PORT_MAPPING}:${DB_PORT}"

  datasource:
    build:
      context: lib/datasource
      args:
        ES_PORT: $ES_PORT
    env_file: .env
    image: sarjitsu:elasticsearch
    ports:
    - "${DATASOURCE_PORT_MAPPING}:${ES_PORT}"

  frontend:
    build:
      context: lib/frontend
      args:
        GRAFANA_PORT: $GRAFANA_PORT
    env_file: .env
    image: sarjitsu:grafana
    ports:
    - "${FRONTEND_PORT_MAPPING}:${GRAFANA_PORT}"
    links:
     - metricstore
     - datasource
    depends_on:
     - metricstore
     - datasource

  middleware:
    build:
      context: lib/middleware
      args:
        MIDDLEWARE_PORT: $MIDDLEWARE_PORT
    env_file: .env
    image: sarjitsu:api
    ports:
    - "${MIDDLEWARE_PORT_MAPPING}:${MIDDLEWARE_PORT}"
    depends_on:
     - datasource
    links:
     - datasource
     - metricstore

  web:
    restart: always
    build:
      context: lib/backend
      args:
        BACKEND_SERVER_PORT: $BACKEND_SERVER_PORT
    env_file: .env
    image: sarjitsu:backend
    ports:
    - "${BACKEND_PORT_MAPPING}:${BACKEND_SERVER_PORT}"
    depends_on:
     - metricstore
     - datasource
     - redis
     - frontend
     - middleware
    links:
     - metricstore
     - datasource
     - frontend
     - middleware
     - redis

  nginx:
    restart: always
    build: lib/proxy
    image: sarjitsu:proxy
    ports:
    - "${PROXY_PORT_MAPPING}:${PROXY_PORT}"
    links:
      - web:web
